<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picWorkingTime.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PicDelivery.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VsRQX7/+H5gAWi4ZYfZ8AAAAAElFTkSuQmCC
</value>
  </data>
</root>